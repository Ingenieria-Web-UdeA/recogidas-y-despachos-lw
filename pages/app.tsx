import Layout from '@layouts/Layout';
import Head from 'next/head';
import { data } from 'utils/fakeData';
import _ from 'lodash';
import { DataFilters } from '@components/DataFilters';
import { ActionButtons } from '@components/ActionButtons';
import { ModalRecogidas } from '@components/modals/ModalRecogidas';
import { RecogidasContextProvider } from '@context/recogidasContext';
import { ModalDespachos } from '@components/modals/ModalDespachos';
import { NextPage } from 'next';
import { MdFilterAlt, MdFilterAltOff } from 'react-icons/md';
import { useState } from 'react';
import CardLote from '@components/cards/CardLote';
import PrivateRoute from '@components/PrivateRoute';

const Home: NextPage = () => {
  const [showFilters, setShowFilters] = useState<boolean>(false);
  return (
    <PrivateRoute>
      <Layout>
        <>
          <Head>
            <title>Create Next App</title>
            <meta name='description' content='Generated by create next app' />
            <meta
              name='viewport'
              content='width=device-width, initial-scale=1'
            />
            <link rel='icon' href='/favicon.ico' />
          </Head>
          <RecogidasContextProvider>
            <>
              <div className='flex h-full w-full flex-col gap-3 p-2 lg:p-10'>
                <div className='flex justify-center gap-2'>
                  <h1>Despachos y Recogidas</h1>
                  <button
                    onClick={() => setShowFilters(!showFilters)}
                    type='button'
                    className='icon'
                  >
                    {showFilters ? <MdFilterAltOff /> : <MdFilterAlt />}
                  </button>
                </div>
                <div className='flex flex-col items-center justify-center gap-3 lg:flex-row lg:justify-between'>
                  {showFilters && <DataFilters />}
                  <ActionButtons />
                </div>
                <TableDesktop />
                <MobileCards />
              </div>
              <ModalRecogidas />
              <ModalDespachos />
            </>
          </RecogidasContextProvider>
        </>
      </Layout>
    </PrivateRoute>
  );
};

const TableDesktop = () => {
  const tableData = _.groupBy(data, 'Fecha');
  return (
    <div className='hidden flex-col lg:flex'>
      <div className='flex h-[80vh] w-full justify-center overflow-y-scroll'>
        <table>
          <thead>
            <tr>
              <th>Fecha</th>
              <th>Lote 1</th>
              <th>Lote 2</th>
              <th>Lote 3</th>
              <th>Lote 4</th>
              <th>Lote 5</th>
              <th>Lote 6</th>
              <th>Lote 7</th>
              <th>Lote 8</th>
              <th>Lote 9</th>
              <th>Lote 10</th>
            </tr>
          </thead>
          <tbody>
            {Object.keys(tableData).map((date) => (
              <tr key={`row_${date}`}>
                <td>{date}</td>
                {tableData[date].map((lot) => (
                  <td key={`data_${date}_${lot.Lote}`}>{lot.Racimos}</td>
                ))}
              </tr>
            ))}
          </tbody>
        </table>
      </div>
      <div>paginacion</div>
    </div>
  );
};

const MobileCards = () => {
  const lotes = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
  return (
    <div className='grid h-full grid-cols-2 gap-3 lg:hidden'>
      {lotes.map((lote) => (
        <CardLote key={`lote_${lote}`} name={lote.toString()} />
      ))}
    </div>
  );
};

export default Home;
